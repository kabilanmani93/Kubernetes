#https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
apiVersion: v1
kind: Pod
metadata:
  name: result-app-pod
  labels:
    name: result-app-pod
    app: demo-voting-app
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:  #hard affinity
        nodeSelectorTerms:
          - matchExpressions:
              - key: Memory
                operator: gt
                values:
                  - 10
              - key: Disk_Type
                operator: In
                values:
                  - ssd
        preferredDuringSchedulingIgnoredDuringExecution:  #soft affinity The “soft” rule says that among the nodes that meet “hard” criteria
          - weight: 1
            preference:
              matchExpressions:
                - key: Cpu_Type
                  operator: In
                  values:
                    - High
  containers:
    - name: result-app
      image: kodekloud/examplevotingapp_result:v1
      ports:
        - containerPort: 80
      readinessProbe:
        httpGet:
          path: https://localhost
          port: 80
        initialDelaySeconds: 20
        periodSeconds: 5
        successThreshold: 1
        failureThreshold: 3
        timeoutSeconds: 1